Loading data...

Extracting features...
Feature columns before preparation: ['business_id', 'stars', 'review_count', 'avg_user_rating', 'user_rating_count', 'rating_std']
Sample of numeric values:
    stars  review_count  avg_user_rating  user_rating_count  rating_std
0    5.0             3         5.000000                  3    0.000000
1    5.0             5         5.000000                  4    0.000000
2    5.0             4         5.000000                  4    0.000000
3    3.5             5         3.400000                  5    0.547723
4    3.5            14         3.714286                 14    1.325987
Using numeric features for clustering: ['stars', 'review_count', 'avg_user_rating', 'user_rating_count', 'rating_std']
Feature matrix shape: (11537, 5)
Computing results for find_optimal_k_elbow

Calculating inertias for k=1 to 15
Training KMeans with k=1...
k=1, inertia=57685.00
Training KMeans with k=2...
k=2, inertia=39322.81
Training KMeans with k=3...
k=3, inertia=25866.75
Training KMeans with k=4...
k=4, inertia=19768.08
Training KMeans with k=5...
k=5, inertia=15464.31
Training KMeans with k=6...
k=6, inertia=12845.01
Training KMeans with k=7...
k=7, inertia=11139.89
Training KMeans with k=8...
k=8, inertia=9559.91
Training KMeans with k=9...
k=9, inertia=8314.34
Training KMeans with k=10...
k=10, inertia=7500.73
Training KMeans with k=11...
k=11, inertia=6729.74
Training KMeans with k=12...
k=12, inertia=6103.84
Training KMeans with k=13...
k=13, inertia=5671.02
Training KMeans with k=14...
k=14, inertia=5267.13
Training KMeans with k=15...
k=15, inertia=4917.47
Saving results to data/cache/elbow_method_results.pkl

Elbow curve plot saved to: /data/cache/elbow_curve.png

Based on the elbow method (looking for decrease < 10%):
Suggested optimal k = 10
